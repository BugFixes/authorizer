name: Master
on:
  push:
    branches:
      - 'master'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: 1.13.x
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: install golangci-lint
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.21.0
      - name: lint
        run: $(go env GOPATH)/bin/golangci-lint run

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: 1.13.x
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: docker postgres
        run: docker pull postgres:11.5
      - uses: actions/setup-python@v1
        with:
          python-version: 3.x
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - name: install test dependencies
        run: |
          pip install wheel setuptools --upgrade
          pip install awscli-local --upgrade
      - name: create database
        run: ./.ci/cloud.sh testDatabase
      - name: run tests
        run: ./.ci/cloud/cloud.sh testCode

  push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: 1.13.x
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v1
        with:
          python-version: 3.x
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - name: cloudformation
        env:
          DB_HOSTNAME: ${{ secrets.DB_HOSTNAME }}
          DB_PORT: 5432
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: ./.ci/cloud/cloud.sh
